#!/bin/bash

#------------------------------------------
# Libraries
#------------------------------------------
MADFOX_LIB_DIR=~/var/develop/MadMask/MadFoxd/lib
[ ! -e $MADFOX_LIB_DIR ] && MADFOX_LIB_DIR=/usr/share/madfoxd/lib
MADANALYZER_LIB_DIR=~/var/develop/MadMask/MadModules/lib
[ ! -e $MADANALYZER_LIB_DIR ] && MADANALYZER_LIB_DIR=/usr/share/madanalyzer/lib
export MADANALYZER_LIB_DIR
R_RUNTIME_LOADER="$MADANALYZER_LIB_DIR/rlib/runtime_loader.R"

## Sourcing functions 
[ -e $MADFOX_LIB_DIR ] && for func in $(ls $MADFOX_LIB_DIR/*.sh); do source $func; done
[ -e $MADANALYZER_LIB_DIR ] && for func in $(ls $MADANALYZER_LIB_DIR/*.sh); do source $func; done


#------------------------------------------
# Some system constrains
#------------------------------------------
## An acceptable load before starting analysis (=70%)
SYSTEM_LOAD_MAX=70

## Default Parallel runs (=25%)
PARALLEL=$(($(nproc) / 4 ))

## According to this length, date-time data can be analyzed, categorized and surmmarized
MAX_DATETIME_LENGTH=50


#------------------------------------------
# Basis and Algorithms 
#  They can be overrided by 'config.json'
#------------------------------------------
ANALYSIS_IMAGE_SIZE="384x384"
DETECTOR_ALGORITHM="BCP" ## Bayesian Change Point
FORECAST_ALGORITHM="ANFIS" ## Artificial Neuro Fuzzy Influence System


#------------------------------------------
# For default Inputs/Outputs and Configurations
#------------------------------------------
DATA_HOME=.
CAPTURE_DIR=capture
THUMBNAIL_DIR=thumbnail
INDEX_DIR=index
SITE_DIR=sites/default
CONFIG_DATA_DIR=""


usage="$0 [options] -a [action]
 Meta-monitoring Analytics Device (MAD) Analyzer: A library to analyze a system status by the given meta-monitoring data of a time series and the system definition. The final stauts is categorized by some predefined priorities and a structure in the URLs and Systems JSON files. According to a template in 'summary_template', the 'summary.json' file in the 'index' directory will provide a human-readable status summary.

 * System parameters and constrains
 -l:  System load limit [default: $SYSTEM_LOAD_MAX %]
 -p:  Number of Parallel runs [default: $PARALLEL]
 -d:  Max date-time length as a time series [default: $MAX_DATETIME_LENGTH]
 -x:  X-window display [default: :0]

 * Home directory of Inputs/Outputs Data
 -o:  data home [default: $DATA_HOME]
   'data dir' = 'data home'/'data_dir of config.json'
   The input data is read from 'data dir'/{'$CAPTURE_DIR'|'$THUMBNAIL_DIR'}.
   JSON index files under 'data dir'/'index' will be generated. 
   Analysis results under 'data dir'/'analysis' will be generated.

   * Optional (Inputs): 
   -C:  Capture dir under 'data dir' [default: $CAPTURE_DIR]
   -T:  Thumbnail dir under 'data dir' [default: $THUMBNAIL_DIR]

 * Configurations
 -s:  Set 'site dir', then the following files are read. [default: \$DATA_HOME/$SITE_DIR]
      (If empty, \$DATA_HOME/sites/default is used)

    - config.json (Config JSON file provides variables such as data_dir, image_size, algorithms and so on)
    - monitoring-urls.json (URLs JSON file provides URL links and 'Categories' such as 'Normal', etc.)
    - systems.json (Systems JSON file: a definition of all system components)
    - summary_template/ (Summary template provides some 'Category' templates such as 'Normal.json', etc.)

 * Run an action
 -a:  Set action [base_images|detector|pathway|madvision|forecast|summary|all]

 Report Bugs to Gen Kawamura <gen.kawamura@cern.ch>"


if [ $# -eq 0 ]; then
    echo "$usage"
    exit 0
fi


#--------------------------
# Getopt
#--------------------------
while getopts "l:p:d:x:o:C:T:s:a:hv" op
  do
  case $op in
      l) SYSTEM_LOAD_MAX=$OPTARG
	  ;;
      p) PARALLEL=$OPTARG
	  ;;
      d) MAX_DATETIME_LENGTH=$OPTARG
	  ;;
      x) echo "Mock"
	  ;;
      o) DATA_HOME=$OPTARG
	  ;;
      C) CAPTURE_DIR=$OPTARG
	  ;;
      T) THUMBNAIL_DIR=$OPTARG
	  ;;
      s) SITE_DIR=$OPTARG
	  ;;
      a) action=$OPTARG
	  ;;
      h) echo "$usage"
	  exit 0
	  ;;
      v) echo "$version"
	  exit 0
	  ;;
      ?) echo "$usage"
	  exit 0
	  ;;
  esac
done


#---------------------------------------------------------------------------
#
# Functions: 
#
#---------------------------------------------------------------------------
set_site_dir(){
    CONFIG_JSON=$SITE_DIR/config.json
    SYSTEMS_JSON=$SITE_DIR/systems.json
    URLS_JSON=$SITE_DIR/monitoring-urls.json
    SUMMARY_TEMPLATE=$SITE_DIR/summary_template

    ## Check if all JSON input files exist
    [ ! -e $CONFIG_JSON ] && ERROR "config.json [$CONFIG_JSON] does not exist" && return 1
    [ ! -e $SYSTEMS_JSON ] && ERROR "systems.json [$SYSTEMS_JSON] does not exist" && return 1
    [ ! -e $URLS_JSON ] && ERROR "monitoring-urls.json [$URLS_JSON] does not exist" && return 1
    [ ! -e $SUMMARY_TEMPLATE ] && ERROR "summary_template dir [$SUMMARY_TEMPLATE] does not exist" && return 1

    ## Reading config.json --> Set DATA_DIR & Algorithms
    INFO "Reading [$CONFIG_JSON] ..."
    read_common_config $CONFIG_JSON || return 1

    ## Set variables
    DATA_DIR=$DATA_HOME/$CONFIG_DATA_DIR
    ANALYSIS_IMAGE_SIZE=$CONFIG_ANALYSIS_IMAGE_SIZE
    CAPTURE_DIR=$DATA_DIR/$CAPTURE_DIR
    THUMBNAIL_DIR=$DATA_DIR/$THUMBNAIL_DIR
    INDEX_DIR=$DATA_DIR/$INDEX_DIR

    return 0
}

#---------------------------------------------------------------------------
#
# Main
#
#---------------------------------------------------------------------------
# Check basic variables
[ -z "$DATA_HOME" ] && ERROR "DATA_HOME is null" && exit -1
[ ! -e "$DATA_HOME" ] && ERROR "DATA_HOME [$DATA_HOME] does not exist" && exit -1
[ -z "$CAPTURE_DIR" ] && ERROR "CAPTURE_DIR is null" && exit -1
[ -z "$THUMBNAIL_DIR" ] && ERROR "THUMBNAIL_DIR is null" && exit -1


# Read site config
SITE_DIR=$DATA_HOME/$SITE_DIR
[ ! -e $SITE_DIR ] && ERROR "SITE_DIR [$SITE_DIR] does not exist" && exit -1
! set_site_dir && ERROR "Cannot set site_dir variables from [$DATA_HOME/SITE_DIR]" && exit -1


# Checking variables again
[ -z "$DETECTOR_ALGORITHM" ] && ERROR "DETECTOR_ALGORITHM is null" && exit -1
[ -z "$FORECAST_ALGORITHM" ] && ERROR "FORECAST_ALGORITHM is null" && exit -1
[ ! -e "$DATA_DIR" ] && ERROR "Input: DATA_DIR [$DATA_DIR] does not exist" && exit -1
[ ! -e "$CAPTURE_DIR" ] && ERROR "Input: CAPTURE_DIR [$CAPTURE_DIR] does not exist" && exit -1
[ ! -e "$THUMBNAIL_DIR" ] && ERROR "Input: CAPTURE_DIR [$THUMBNAIL_DIR] does not exist" && exit -1
[ ! -e "$INDEX_DIR" ] && ERROR "Input: CAPTURE_DIR [$INDEX_DIR] does not exist" && exit -1
[ -z "$ANALYSIS_IMAGE_SIZE" ] && ERROR "ANALYSIS_IMAGE_SIZE is null" && exit -1


# Displaying basic information
INFO "ANALYSIS_IMAGE_SIZE = $ANALYSIS_IMAGE_SIZE" 
INFO "DETECTOR_ALGORITHM  = $DETECTOR_ALGORITHM" 
INFO "FORECAST_ALGORITHM  = $FORECAST_ALGORITHM"
INFO "DATA_HOME           = $DATA_HOME"
INFO "DATA_DIR            = $DATA_DIR"
INFO "CAPTURE_DIR         = $CAPTURE_DIR" 
INFO "THUMBNAIL_DIR       = $THUMBNAIL_DIR" 
INFO "INDEX_DIR           = $INDEX_DIR" 


# Set Inputs/Outputs directories (DATA_DIR was configured by 'DATA_HOME/data_dir in config.json')
! set_analysis_dirs && ERROR "Cannot set ANALYSIS_DIR [$ANALYSIS_DIR] for DATA_DIR [$DATA_DIR]" && exit -1
INFO "ANALYSIS_DIR        = $ANALYSIS_DIR" 

# Get basic information
! set_date_ids "$CAPTURE_DIR" $MAX_DATETIME_LENGTH && ERROR "DATE_ID error [$DATE_IDs]" && exit -1 
INFO "LATEST_DATE_ID = [$LATEST_DATE_ID], DATE_IDs = [$(echo $DATE_IDs)]"

# Check system load
! system_load_monitor $SYSTEM_LOAD_MAX && INFO "System load is high" && exit -1


# Running an action
case "$action" in
    base_images)
	generate_base_images "$ANALYSIS_IMAGE_SIZE"
	;;
    detector)
	generate_detector "$DETECTOR_ALGORITHM"
	;;
    pathway)
	generate_pathway
	;;
    madvision)
	generate_madvision "$DETECTOR_ALGORITHM"
	;;
    forecast)
	generate_forecast "$FORECAST_ALGORITHM"
	;;
    summary)
	generate_summary "$DETECTOR_ALGORITHM"
	generate_analysis_index
	generate_latest_symlinks
	;;
    all)
	generate_base_images "$ANALYSIS_IMAGE_SIZE"
	generate_detector "$DETECTOR_ALGORITHM"
	generate_pathway
	generate_madvision "$DETECTOR_ALGORITHM"
	generate_forecast "$FORECAST_ALGORITHM"
	generate_summary "$DETECTOR_ALGORITHM"
	generate_analysis_index
	generate_latest_symlinks
	;;
    *)
	ERROR "Action [$action] is not defined."
	exit -1
esac


exit 0

