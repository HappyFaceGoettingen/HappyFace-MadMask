#!/bin/sh
#
### BEGIN INIT INFO
# Provides: madfoxd
# Default-Start:
# Default-Stop:
# Short-Description: Start and stop the madfoxd server
# Description: madfoxd provides firefox as backend server capturing browser views
### END INIT INFO
#
# The fields below are left around for legacy tools (will remove later).
#
# chkconfig: - 65 35
# description: madfoxd provides firefox as backend server capturing browser views
# processname: madfoxd
# config: /etc/madfoxd.conf
# pidfile: /var/run/madfoxd.pid

. /etc/rc.d/init.d/functions

RETVAL=0

prog=madfox
pidfile=/var/run/madfoxd.pid

config=/etc/madfoxd.conf

if [ ! -e $config ]; then
    echo "$config does not exist" 
    exit -1
fi
. $config

user=$MADFOXD_USER
group=$MADFOXD_GROUP
pidfile_base=$MADFOXD_PIDDIR
logfile_base=$MADFOXD_LOGDIR
[ -z "$TERM" ] && export TERM=xterm


check_pidfiles(){
    [ ! -e $logfile_base ] && su $user -c "mkdir -pv $logfile_base"
    [ ! -e $pidfile_base ] && su $user -c "mkdir -pv $pidfile_base"

    ls $pidfile_base | grep -e "^firefox" -e "^Xwin" &> /dev/null
    [ $? -eq 0 ] && echo "pidfiles in [$pidfile_base] exist" && return 1
    return 0
}

run_madfox(){
    local action=$1
    su $user -c "$prog -L $MADFOXD_LOGLEVEL -x $MADFOXD_X_DISPLAY -w $MADFOXD_WAIT_FIREFOX_BOOT -t $MADFOXD_WAIT_FIREFOX_OPEN_TAB -C MADFOXD_WAIT_FIREFOX_COMMAND -c $MADFOXD_CONFIG -u $MADFOXD_URLFILE -o $MADFOXD_DATA_HOME -l ${logfile_base} -p ${pidfile_base} -a $action"
    return $?
}

status() {
    run_madfox status
    return $?
}


capture() {
    check_pidfiles || return 1

    ## Reloading screens
    echo "Capturing $prog tabs ..."
    run_madfox capture 2>&1 >> $logfile_base/madfoxd.log
    return $?
}

import() {
    check_pidfiles || return 1

    ## Reloading screens
    echo "Importing $prog images --> [$MADFOXD_DATA_HOME] ..."
    run_madfox import 2>&1 >> $logfile_base/madfoxd.log
    return $?
}

reload() {
    check_pidfiles || return 1

    ## Reloading screens
    echo "Reloading $prog tabs ..."
    run_madfox reload 2>&1 >> $logfile_base/madfoxd.log
    return $?
}

start() {
    check_pidfiles || return 1

    echo -n "Starting $prog server: "

    ## Starting daemon
    run_madfox start 2>&1 >> $logfile_base/madfoxd.log &
    RETVAL=$?

    ## Waiting pidfiles
    for i in $(seq 1 60)
    do
	ls $pidfile_base/madfox.firefox.*.lock &> /dev/null && cat $pidfile_base/*.lock > $pidfile && break
	sleep 5
    done
    
    if [ $RETVAL -eq 0 ]; then
	echo -e "\t[OK]"
    else
	echo -e "\t[ERROR]"
    fi
    return $RETVAL
}

stop() {
    echo -n "Shutting down $prog: "
    run_madfox stop 2>&1 >> $logfile_base/madfoxd.log
    RETVAL=$?

    if [ $RETVAL -eq 0 ]; then
	[ -e $pidfile ] && rm -f $pidfile
	echo "[OK]"
    else
	echo "[ERROR]"
    fi

    return $RETVAL
}

usage() {
    echo $"Usage: $0 {start|stop|restart|status|reload|capture|import}"
}

if [ $# -gt 1 ]; then
    exit 2
fi

[ `id -u` -eq 0 ] || exit 4

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop ; start
        ;;
    status)
        status
        ;;
    reload)
	reload
	;;
    capture)
	capture
	;;
    import)
	import
	;;
    *)
        usage
        exit 2
        ;;
esac

exit $?
