{"version":3,"sources":["../../../src/@ionic-native/plugins/speechkit/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;GAiBG;AASH;IAA+B,6BAAiB;IAAhD;;IA6BA,CAAC;IA3BC;;;OAGG;IAEH,uBAAG,GAAH,UACE,IAAY,EACZ,QAAgB,IACG,MAAM,CAAC,CAAC,CAAC;IAE9B;;;OAGG;IAIH,uBAAG,GAAH,UACE,QAAgB,IACG,MAAM,CAAC,CAAC,CAAC;IAEzB,oBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IArBA;QADC,OAAO,EAAE;;;;wCAIoB;IAS9B;QAHC,OAAO,CAAC;YACP,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;;;;wCAG4B;IArBnB,SAAS;QARrB,MAAM,CAAC;YACN,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,iCAAiC;YACzC,SAAS,EAAE,mBAAmB;YAC9B,IAAI,EAAE,6DAA6D;YACnE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,SAAS,CA6BrB;IAAD,gBAAC;CA7BD,AA6BC,CA7B8B,iBAAiB,GA6B/C;SA7BY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name SpeechKit\n * @description\n * Implementation of Nuance SpeechKit SDK on Ionic\n *\n * @usage\n * ```typescript\n * import { SpeechKit } from '@ionic-native/speechkit';\n *\n * constructor(private speechkit: SpeechKit) { }\n *\n *\n * this.speechkit.tts('Text to be read out loud', 'ENG-GBR').then(\n *   (msg) => { console.log(msg); },\n *   (err) => { console.log(err); }\n * );\n * ```\n */\n@Plugin({\n  pluginName: 'SpeechKit',\n  plugin: 'cordova-plugin-nuance-speechkit',\n  pluginRef: 'plugins.speechkit',\n  repo: 'https://github.com/Shmarkus/cordova-plugin-nuance-speechkit',\n  platforms: ['Android', 'iOS']\n})\n\nexport class SpeechKit extends IonicNativePlugin {\n\n  /**\n   * Speak text out loud in given language\n   * @returns {Promise<string>}\n   */\n  @Cordova()\n  tts(\n    text: string,\n    language: string\n  ): Promise<string> { return; }\n\n  /**\n   * Try to recognize what the user said\n   * @returns {Promise<string>}\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  asr(\n    language: string\n  ): Promise<string> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}