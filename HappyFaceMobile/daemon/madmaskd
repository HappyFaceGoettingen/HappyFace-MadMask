#!/bin/sh
#
### BEGIN INIT INFO
# Provides: madmaskd
# Default-Start:
# Default-Stop:
# Short-Description: Start and stop the madmask server
# Description: madfaced provides the dynamic shock dumping scheduler with Torque Maui
### END INIT INFO
#
# The fields below are left around for legacy tools (will remove later).
#
# chkconfig: - 65 35
# description: madmaskd provides a web server of Ionic Web Launcher
# processname: madmaskd
# config: /etc/madmask.conf
# pidfile: /var/run/madmaskd.pid

. /etc/rc.d/init.d/functions

RETVAL=0

prog=madmask
user=happyface3
group=happyface3
pidfile=/var/run/madmaskd.pid
pidfile_base=/var/run/HappyFace
logfile_base=/var/log/HappyFace
config=/etc/madmask.conf

if [ ! -e $config ]; then
    echo "$config does not exist" 
    exit -1
fi
. $config

[ -z "$TERM" ] && export TERM=xterm


read_ports(){
    site_defs=$(find $MADMASK_HOME/sites/*/config.json)
    jq '.port' $site_defs | sed "s/\"//g" | sort | uniq
}

forever_status() {
    su $user -c "forever list"
    su $user -c "forever list" | grep -v "No forever processes" > /dev/null
    return $?
}

check_pidfiles(){
    [ -e $pidfile ] && echo "pidfile [$pidfile] exist" && return 1
    return 0
}

start() {
    [ `id -u` -eq 0 ] || return 4
    #[ -f $config ] || return 6

    forever_status && return 0
    check_pidfiles || return 1

    ## In case PID dir does not exist
    [ ! -e ${pidfile_base} ] && mkdir -pv ${pidfile_base} && chown $user:$group ${pidfile_base}

    echo -n "Starting $prog server: "

    RETVAL=0

    ## Starting
    for site_def in $(find $MADMASK_HOME/sites/* -maxdepth 0 -type d)
    do
	## Starting daemons
	su $user -c "$MADMASK_HOME/$prog -i -c $site_def -l ${logfile_base} -p ${pidfile_base}" &> /dev/null
	[ $? -ne 0 ] && RETVAL=255
    done

    ## Waiting until pidfiles are ready
    for port in $(read_ports)
    do
	ionic_pidfile=${pidfile_base}/ionic-server.${port}
	for i in $(seq 1 60)
	do
	    [ -e ${ionic_pidfile} ] && echo "$(cat $ionic_pidfile)" >> $pidfile && break
	    sleep 5
	done
    done

    ## Result
    if [ $RETVAL -eq 0 ]; then
	echo -e "\t[OK]"
    else
	echo -e "\t[ERROR]"
    fi
    return $RETVAL
}

stop() {
    [ `id -u` -eq 0 ] || return 4

    echo -n "Shutting down $prog: "
    su $user -c "forever stopall" &> /dev/null
    RETVAL=$?

    for port in $(read_ports)
    do
	ionic_pidfile=${pidfile_base}/ionic-server.${port}
	[ -e ${ionic_pidfile} ] && rm ${ionic_pidfile}
    done

    if [ $RETVAL -eq 0 ]; then
	rm -f $pidfile
	echo "[OK]"
    else
	echo "[ERROR]"
    fi

    return $RETVAL
}

usage() {
    echo $"Usage: $0 {start|stop|restart|status}"
}

if [ $# -gt 1 ]; then
    exit 2
fi

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop ; start
        ;;
    status)
        forever_status
        ;;
    *)
        usage
        exit 2
        ;;
esac

exit $?
