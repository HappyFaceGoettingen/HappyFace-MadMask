#!/usr/bin/node
// http://cruft.io/posts/node-command-line-utilities/

process.title = 'madmask';

// Libraries
var program = require('commander');
var fs = require('fs');
var path = require('path');

// Changing to the program directory
var progDir = path.dirname(fs.realpathSync(__filename));
process.chdir(progDir);

// module and config
var madmask = require('./lib/madmask');


program
  .version('0.3.0')
  .option('-c, --config [SiteDefDir]', 'Select site definition dir [default: sites/default]', 'sites/default')
  .option('-i, --ionic', 'Start ionic server')
  .option('-l, --logdir [LogDir]', 'Log dir [default: /tmp]', '/tmp')
  .option('-p, --piddir [PidDir]', 'Pid dir [default: /tmp]', '/tmp')
  .option('-S, --SystemsTemplate', "Generate [systems.json] template from [monitoring-urls.json]")
  .option('-B, --Browser [action]', 'Call MadBrowser (action = {status|reload|capture|import})', '')
  .option('-A, --Analyzer [action]', 'Call MadAnalyzer (action = {base_images|detector|pathway|madvision|forecast|summary|all})', '')
  .option('-L, --LogCollector', 'Log Collector')
  .option('-W, --Wipe', 'Wipe old files/dirs in data dir')
  .option('-b, --build', 'Build Android application')
  .parse(process.argv);

//console.log(program);

if(program.rawArgs.length <= 2) {
   program.help();
   process.exit(0);
} else {
   /*******************************
	Read config file
   *********************************/
   var configJson = program.config + "/config.json";
   console.log('Reading config file: %s', configJson);
   config = JSON.parse(fs.readFileSync(configJson));


   /*******************************
	Show command line options
   *********************************/
   console.log('Start Ionic server: %s', program.ionic);
   console.log('Ionic logdir: %s', program.logdir);
   console.log('Ionic piddir: %s', program.piddir);
   console.log('Port is: %s', config.port);

   console.log('Call MadBrowser: %s', program.Browser);
   console.log('Call MadAnalyzer: %s', program.Analyzer);
   console.log('Generate system.json: %s', program.SystemsTemplate);
   console.log('Log Collector: %s', program.LogCollector);
   console.log('Wipe is: %s', program.Wipe);
   console.log('Build is: %s', program.build);


   /*******************************
	Execute actions
   *********************************/
   if (program.ionic) madmask.ionic(program.config, config, program.logdir, program.piddir);

   if (program.SystemsTemplate) madmask.generate_systems_json(program.config, config);

   if (program.Browser) madmask.call_madbrowser(program.config, config, program.Browser);

   if (program.Analyzer) madmask.call_madanalyzer(program.config, config, program.Analyzer);

   if (program.LogCollector) madmask.run_log_collector(program.config, config);

   if (program.Wipe) madmask.wipe_data(program.config, config);

   if (program.build) madmask.build_android_apk(program.config, config);
}
